//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Examination_system
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExamSystemEntities : DbContext
    {
        public ExamSystemEntities()
            : base("name=ExamSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Crs_Top> Crs_Top { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Std_Crs> Std_Crs { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<DelCrsIns_Result> DelCrsIns(Nullable<int> ins_id, Nullable<int> crs_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DelCrsIns_Result>("DelCrsIns", ins_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<DeleteInstructor_Result> DeleteInstructor(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteInstructor_Result>("DeleteInstructor", ins_idParameter);
        }
    
        public virtual ObjectResult<DeleteStdById_Result> DeleteStdById(Nullable<int> std_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteStdById_Result>("DeleteStdById", std_idParameter);
        }
    
        public virtual ObjectResult<DeleteUserByUserName_Result> DeleteUserByUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteUserByUserName_Result>("DeleteUserByUserName", userNameParameter);
        }
    
        public virtual ObjectResult<InsertInsForCrs_Result> InsertInsForCrs(Nullable<int> ins_id, Nullable<int> crs_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertInsForCrs_Result>("InsertInsForCrs", ins_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<InsertInstructor_Result> InsertInstructor(Nullable<int> u_id, Nullable<int> dept_id, string fname, string lname, string deg, Nullable<int> sal)
        {
            var u_idParameter = u_id.HasValue ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(int));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var degParameter = deg != null ?
                new ObjectParameter("deg", deg) :
                new ObjectParameter("deg", typeof(string));
    
            var salParameter = sal.HasValue ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertInstructor_Result>("InsertInstructor", u_idParameter, dept_idParameter, fnameParameter, lnameParameter, degParameter, salParameter);
        }
    
        public virtual ObjectResult<InsertNewStd_Result> InsertNewStd(Nullable<int> us_id, Nullable<int> dept_id, string fname, string lname, Nullable<System.DateTime> bod, string address)
        {
            var us_idParameter = us_id.HasValue ?
                new ObjectParameter("us_id", us_id) :
                new ObjectParameter("us_id", typeof(int));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("bod", bod) :
                new ObjectParameter("bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertNewStd_Result>("InsertNewStd", us_idParameter, dept_idParameter, fnameParameter, lnameParameter, bodParameter, addressParameter);
        }
    
        public virtual ObjectResult<InsertNewUser_Result> InsertNewUser(string us_name, string us_mail, string us_pass, string us_sex, Nullable<bool> us_isStd)
        {
            var us_nameParameter = us_name != null ?
                new ObjectParameter("us_name", us_name) :
                new ObjectParameter("us_name", typeof(string));
    
            var us_mailParameter = us_mail != null ?
                new ObjectParameter("us_mail", us_mail) :
                new ObjectParameter("us_mail", typeof(string));
    
            var us_passParameter = us_pass != null ?
                new ObjectParameter("us_pass", us_pass) :
                new ObjectParameter("us_pass", typeof(string));
    
            var us_sexParameter = us_sex != null ?
                new ObjectParameter("us_sex", us_sex) :
                new ObjectParameter("us_sex", typeof(string));
    
            var us_isStdParameter = us_isStd.HasValue ?
                new ObjectParameter("us_isStd", us_isStd) :
                new ObjectParameter("us_isStd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertNewUser_Result>("InsertNewUser", us_nameParameter, us_mailParameter, us_passParameter, us_sexParameter, us_isStdParameter);
        }
    
        public virtual ObjectResult<InsertQues_Result> InsertQues(Nullable<int> crs_id, string cont, Nullable<int> grade, string typ, Nullable<int> ans)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var contParameter = cont != null ?
                new ObjectParameter("cont", cont) :
                new ObjectParameter("cont", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var typParameter = typ != null ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(string));
    
            var ansParameter = ans.HasValue ?
                new ObjectParameter("ans", ans) :
                new ObjectParameter("ans", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertQues_Result>("InsertQues", crs_idParameter, contParameter, gradeParameter, typParameter, ansParameter);
        }
    
        public virtual ObjectResult<SelectCrsIns_Result> SelectCrsIns(Nullable<int> ins_id, Nullable<int> crs_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCrsIns_Result>("SelectCrsIns", ins_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<SelectInstructor_Result> SelectInstructor(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectInstructor_Result>("SelectInstructor", ins_idParameter);
        }
    
        public virtual ObjectResult<SelectStdById_Result> SelectStdById(Nullable<int> std_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStdById_Result>("SelectStdById", std_idParameter);
        }
    
        public virtual ObjectResult<SelectUserById_Result> SelectUserById(Nullable<int> us_id)
        {
            var us_idParameter = us_id.HasValue ?
                new ObjectParameter("us_id", us_id) :
                new ObjectParameter("us_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUserById_Result>("SelectUserById", us_idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_AssignAnsToStd(Nullable<int> std_id, Nullable<int> exm_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var exm_idParameter = exm_id.HasValue ?
                new ObjectParameter("exm_id", exm_id) :
                new ObjectParameter("exm_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AssignAnsToStd", std_idParameter, exm_idParameter);
        }
    
        public virtual ObjectResult<sp_CorrectStdExam_Result> sp_CorrectStdExam(Nullable<int> std_id, Nullable<int> exm_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var exm_idParameter = exm_id.HasValue ?
                new ObjectParameter("exm_id", exm_id) :
                new ObjectParameter("exm_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CorrectStdExam_Result>("sp_CorrectStdExam", std_idParameter, exm_idParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_deleteChoice_Result> sp_deleteChoice(Nullable<int> cho_id)
        {
            var cho_idParameter = cho_id.HasValue ?
                new ObjectParameter("cho_id", cho_id) :
                new ObjectParameter("cho_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteChoice_Result>("sp_deleteChoice", cho_idParameter);
        }
    
        public virtual ObjectResult<sp_deleteCourse_Result> sp_deleteCourse(Nullable<int> crs_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteCourse_Result>("sp_deleteCourse", crs_idParameter);
        }
    
        public virtual ObjectResult<sp_deleteDepartment_Result> sp_deleteDepartment(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteDepartment_Result>("sp_deleteDepartment", deptIdParameter);
        }
    
        public virtual ObjectResult<sp_deleteExam_Result> sp_deleteExam(Nullable<int> exam_id)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteExam_Result>("sp_deleteExam", exam_idParameter);
        }
    
        public virtual ObjectResult<sp_DeleteQues_Result> sp_DeleteQues(Nullable<int> ques_id)
        {
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DeleteQues_Result>("sp_DeleteQues", ques_idParameter);
        }
    
        public virtual ObjectResult<sp_DeleteStdFromCrs_Result> sp_DeleteStdFromCrs(Nullable<int> std_id, Nullable<int> crs_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DeleteStdFromCrs_Result>("sp_DeleteStdFromCrs", std_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<sp_deleteTopic_Result> sp_deleteTopic(Nullable<int> crs_id, string crs_top)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_topParameter = crs_top != null ?
                new ObjectParameter("crs_top", crs_top) :
                new ObjectParameter("crs_top", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteTopic_Result>("sp_deleteTopic", crs_idParameter, crs_topParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GenerateExam_Result> sp_GenerateExam(Nullable<int> mcq, Nullable<int> tfq, Nullable<int> crs_id, Nullable<int> ins_id)
        {
            var mcqParameter = mcq.HasValue ?
                new ObjectParameter("mcq", mcq) :
                new ObjectParameter("mcq", typeof(int));
    
            var tfqParameter = tfq.HasValue ?
                new ObjectParameter("tfq", tfq) :
                new ObjectParameter("tfq", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GenerateExam_Result>("sp_GenerateExam", mcqParameter, tfqParameter, crs_idParameter, ins_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_InsertChoice_Result> sp_InsertChoice(Nullable<int> ques_id, string cho_content, string cho_char)
        {
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            var cho_contentParameter = cho_content != null ?
                new ObjectParameter("cho_content", cho_content) :
                new ObjectParameter("cho_content", typeof(string));
    
            var cho_charParameter = cho_char != null ?
                new ObjectParameter("cho_char", cho_char) :
                new ObjectParameter("cho_char", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertChoice_Result>("sp_InsertChoice", ques_idParameter, cho_contentParameter, cho_charParameter);
        }
    
        public virtual ObjectResult<sp_insertCourse_Result> sp_insertCourse(string crs_name, string crs_desc, Nullable<int> crs_dur)
        {
            var crs_nameParameter = crs_name != null ?
                new ObjectParameter("crs_name", crs_name) :
                new ObjectParameter("crs_name", typeof(string));
    
            var crs_descParameter = crs_desc != null ?
                new ObjectParameter("crs_desc", crs_desc) :
                new ObjectParameter("crs_desc", typeof(string));
    
            var crs_durParameter = crs_dur.HasValue ?
                new ObjectParameter("crs_dur", crs_dur) :
                new ObjectParameter("crs_dur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertCourse_Result>("sp_insertCourse", crs_nameParameter, crs_descParameter, crs_durParameter);
        }
    
        public virtual ObjectResult<sp_insertDepartment_Result> sp_insertDepartment(string dept_name, string dept_loc, Nullable<System.DateTime> dept_managerHireDate, Nullable<int> dept_managerId)
        {
            var dept_nameParameter = dept_name != null ?
                new ObjectParameter("dept_name", dept_name) :
                new ObjectParameter("dept_name", typeof(string));
    
            var dept_locParameter = dept_loc != null ?
                new ObjectParameter("dept_loc", dept_loc) :
                new ObjectParameter("dept_loc", typeof(string));
    
            var dept_managerHireDateParameter = dept_managerHireDate.HasValue ?
                new ObjectParameter("dept_managerHireDate", dept_managerHireDate) :
                new ObjectParameter("dept_managerHireDate", typeof(System.DateTime));
    
            var dept_managerIdParameter = dept_managerId.HasValue ?
                new ObjectParameter("dept_managerId", dept_managerId) :
                new ObjectParameter("dept_managerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertDepartment_Result>("sp_insertDepartment", dept_nameParameter, dept_locParameter, dept_managerHireDateParameter, dept_managerIdParameter);
        }
    
        public virtual ObjectResult<sp_insertExam_Result> sp_insertExam(Nullable<int> crs_id, Nullable<int> generator_id, Nullable<int> exam_grade)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var generator_idParameter = generator_id.HasValue ?
                new ObjectParameter("generator_id", generator_id) :
                new ObjectParameter("generator_id", typeof(int));
    
            var exam_gradeParameter = exam_grade.HasValue ?
                new ObjectParameter("exam_grade", exam_grade) :
                new ObjectParameter("exam_grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertExam_Result>("sp_insertExam", crs_idParameter, generator_idParameter, exam_gradeParameter);
        }
    
        public virtual ObjectResult<sp_InsertStdAnsForExm_Result> sp_InsertStdAnsForExm(Nullable<int> std_id, Nullable<int> exm_id, Nullable<int> ques_id, string ans)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var exm_idParameter = exm_id.HasValue ?
                new ObjectParameter("Exm_id", exm_id) :
                new ObjectParameter("Exm_id", typeof(int));
    
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            var ansParameter = ans != null ?
                new ObjectParameter("ans", ans) :
                new ObjectParameter("ans", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertStdAnsForExm_Result>("sp_InsertStdAnsForExm", std_idParameter, exm_idParameter, ques_idParameter, ansParameter);
        }
    
        public virtual ObjectResult<sp_InsertStdForCrs_Result> sp_InsertStdForCrs(Nullable<int> std_id, Nullable<int> crs_id, Nullable<int> grade, Nullable<System.DateTime> date)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertStdForCrs_Result>("sp_InsertStdForCrs", std_idParameter, crs_idParameter, gradeParameter, dateParameter);
        }
    
        public virtual ObjectResult<sp_insertTopic_Result> sp_insertTopic(Nullable<int> crs_id, string crs_top)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_topParameter = crs_top != null ?
                new ObjectParameter("crs_top", crs_top) :
                new ObjectParameter("crs_top", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertTopic_Result>("sp_insertTopic", crs_idParameter, crs_topParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_selectchoice_Result> sp_selectchoice(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectchoice_Result>("sp_selectchoice", idParameter);
        }
    
        public virtual ObjectResult<sp_selectCourse_Result> sp_selectCourse(Nullable<int> crs_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectCourse_Result>("sp_selectCourse", crs_idParameter);
        }
    
        public virtual ObjectResult<sp_selectDepartment_Result> sp_selectDepartment(Nullable<int> dept_id)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectDepartment_Result>("sp_selectDepartment", dept_idParameter);
        }
    
        public virtual ObjectResult<sp_selectExam_Result> sp_selectExam(Nullable<int> exam_id)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectExam_Result>("sp_selectExam", exam_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectQues_Result> sp_SelectQues(Nullable<int> ques_id)
        {
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectQues_Result>("sp_SelectQues", ques_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectStdAnsForExm_Result> sp_SelectStdAnsForExm(Nullable<int> std_id, Nullable<int> exm_id, Nullable<int> ques_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var exm_idParameter = exm_id.HasValue ?
                new ObjectParameter("Exm_id", exm_id) :
                new ObjectParameter("Exm_id", typeof(int));
    
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectStdAnsForExm_Result>("sp_SelectStdAnsForExm", std_idParameter, exm_idParameter, ques_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectStdOfCrs_Result> sp_SelectStdOfCrs(Nullable<int> std_id, Nullable<int> crs_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectStdOfCrs_Result>("sp_SelectStdOfCrs", std_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<sp_selectTopic_Result> sp_selectTopic(Nullable<int> crs_id, string crs_topic)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_topicParameter = crs_topic != null ?
                new ObjectParameter("crs_topic", crs_topic) :
                new ObjectParameter("crs_topic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectTopic_Result>("sp_selectTopic", crs_idParameter, crs_topicParameter);
        }
    
        public virtual ObjectResult<sp_updateChoice_Result> sp_updateChoice(Nullable<int> cho_id, Nullable<int> ques_id, string cho_content, string cho_char)
        {
            var cho_idParameter = cho_id.HasValue ?
                new ObjectParameter("cho_id", cho_id) :
                new ObjectParameter("cho_id", typeof(int));
    
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            var cho_contentParameter = cho_content != null ?
                new ObjectParameter("cho_content", cho_content) :
                new ObjectParameter("cho_content", typeof(string));
    
            var cho_charParameter = cho_char != null ?
                new ObjectParameter("cho_char", cho_char) :
                new ObjectParameter("cho_char", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateChoice_Result>("sp_updateChoice", cho_idParameter, ques_idParameter, cho_contentParameter, cho_charParameter);
        }
    
        public virtual ObjectResult<sp_updateCourse_Result> sp_updateCourse(Nullable<int> crs_id, string crs_name, string crs_desc, Nullable<int> crs_dur)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_nameParameter = crs_name != null ?
                new ObjectParameter("crs_name", crs_name) :
                new ObjectParameter("crs_name", typeof(string));
    
            var crs_descParameter = crs_desc != null ?
                new ObjectParameter("crs_desc", crs_desc) :
                new ObjectParameter("crs_desc", typeof(string));
    
            var crs_durParameter = crs_dur.HasValue ?
                new ObjectParameter("crs_dur", crs_dur) :
                new ObjectParameter("crs_dur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateCourse_Result>("sp_updateCourse", crs_idParameter, crs_nameParameter, crs_descParameter, crs_durParameter);
        }
    
        public virtual ObjectResult<sp_UpdateCrsForIns_Result> sp_UpdateCrsForIns(Nullable<int> ins_id, Nullable<int> old_crs_id, Nullable<int> new_crs_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var old_crs_idParameter = old_crs_id.HasValue ?
                new ObjectParameter("old_crs_id", old_crs_id) :
                new ObjectParameter("old_crs_id", typeof(int));
    
            var new_crs_idParameter = new_crs_id.HasValue ?
                new ObjectParameter("new_crs_id", new_crs_id) :
                new ObjectParameter("new_crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpdateCrsForIns_Result>("sp_UpdateCrsForIns", ins_idParameter, old_crs_idParameter, new_crs_idParameter);
        }
    
        public virtual ObjectResult<sp_UpdateCrsOfStd_Result> sp_UpdateCrsOfStd(Nullable<int> std_id, Nullable<int> old_crs_id, Nullable<int> new_crs_id, Nullable<int> grade, Nullable<System.DateTime> date)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var old_crs_idParameter = old_crs_id.HasValue ?
                new ObjectParameter("old_crs_id", old_crs_id) :
                new ObjectParameter("old_crs_id", typeof(int));
    
            var new_crs_idParameter = new_crs_id.HasValue ?
                new ObjectParameter("new_crs_id", new_crs_id) :
                new ObjectParameter("new_crs_id", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpdateCrsOfStd_Result>("sp_UpdateCrsOfStd", std_idParameter, old_crs_idParameter, new_crs_idParameter, gradeParameter, dateParameter);
        }
    
        public virtual ObjectResult<sp_updateDepartment_Result> sp_updateDepartment(Nullable<int> dept_id, string dept_name, string dept_loc, Nullable<System.DateTime> dept_managerHireDate, Nullable<int> dept_managerId)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var dept_nameParameter = dept_name != null ?
                new ObjectParameter("dept_name", dept_name) :
                new ObjectParameter("dept_name", typeof(string));
    
            var dept_locParameter = dept_loc != null ?
                new ObjectParameter("dept_loc", dept_loc) :
                new ObjectParameter("dept_loc", typeof(string));
    
            var dept_managerHireDateParameter = dept_managerHireDate.HasValue ?
                new ObjectParameter("dept_managerHireDate", dept_managerHireDate) :
                new ObjectParameter("dept_managerHireDate", typeof(System.DateTime));
    
            var dept_managerIdParameter = dept_managerId.HasValue ?
                new ObjectParameter("dept_managerId", dept_managerId) :
                new ObjectParameter("dept_managerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateDepartment_Result>("sp_updateDepartment", dept_idParameter, dept_nameParameter, dept_locParameter, dept_managerHireDateParameter, dept_managerIdParameter);
        }
    
        public virtual ObjectResult<sp_updateExam_Result> sp_updateExam(Nullable<int> exam_id, Nullable<int> crs_id, Nullable<int> generator_id, Nullable<int> exam_grade)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var generator_idParameter = generator_id.HasValue ?
                new ObjectParameter("generator_id", generator_id) :
                new ObjectParameter("generator_id", typeof(int));
    
            var exam_gradeParameter = exam_grade.HasValue ?
                new ObjectParameter("exam_grade", exam_grade) :
                new ObjectParameter("exam_grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateExam_Result>("sp_updateExam", exam_idParameter, crs_idParameter, generator_idParameter, exam_gradeParameter);
        }
    
        public virtual ObjectResult<sp_updateTopic_Result> sp_updateTopic(Nullable<int> crs_id, string crs_top)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_topParameter = crs_top != null ?
                new ObjectParameter("crs_top", crs_top) :
                new ObjectParameter("crs_top", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateTopic_Result>("sp_updateTopic", crs_idParameter, crs_topParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<UpdateInstructor_Result> UpdateInstructor(Nullable<int> ins_id, Nullable<int> u_id, Nullable<int> dept_id, string fname, string lname, string deg, Nullable<int> sal)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var u_idParameter = u_id.HasValue ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(int));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var degParameter = deg != null ?
                new ObjectParameter("deg", deg) :
                new ObjectParameter("deg", typeof(string));
    
            var salParameter = sal.HasValue ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateInstructor_Result>("UpdateInstructor", ins_idParameter, u_idParameter, dept_idParameter, fnameParameter, lnameParameter, degParameter, salParameter);
        }
    
        public virtual ObjectResult<UpdateQues_Result> UpdateQues(Nullable<int> ques_id, Nullable<int> crs_id, string cont, Nullable<int> grade, string typ, Nullable<int> ans)
        {
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var contParameter = cont != null ?
                new ObjectParameter("cont", cont) :
                new ObjectParameter("cont", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var typParameter = typ != null ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(string));
    
            var ansParameter = ans.HasValue ?
                new ObjectParameter("ans", ans) :
                new ObjectParameter("ans", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateQues_Result>("UpdateQues", ques_idParameter, crs_idParameter, contParameter, gradeParameter, typParameter, ansParameter);
        }
    
        public virtual ObjectResult<UpdateStdInfo_Result> UpdateStdInfo(Nullable<int> std_id, Nullable<int> us_id, Nullable<int> dept_id, string fname, string lname, Nullable<System.DateTime> bod, string address)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var us_idParameter = us_id.HasValue ?
                new ObjectParameter("us_id", us_id) :
                new ObjectParameter("us_id", typeof(int));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("bod", bod) :
                new ObjectParameter("bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateStdInfo_Result>("UpdateStdInfo", std_idParameter, us_idParameter, dept_idParameter, fnameParameter, lnameParameter, bodParameter, addressParameter);
        }
    
        public virtual ObjectResult<UpdateUser_Result> UpdateUser(Nullable<int> us_id, string us_name, string us_mail, string us_pass, string us_sex, Nullable<bool> us_isStd)
        {
            var us_idParameter = us_id.HasValue ?
                new ObjectParameter("us_id", us_id) :
                new ObjectParameter("us_id", typeof(int));
    
            var us_nameParameter = us_name != null ?
                new ObjectParameter("us_name", us_name) :
                new ObjectParameter("us_name", typeof(string));
    
            var us_mailParameter = us_mail != null ?
                new ObjectParameter("us_mail", us_mail) :
                new ObjectParameter("us_mail", typeof(string));
    
            var us_passParameter = us_pass != null ?
                new ObjectParameter("us_pass", us_pass) :
                new ObjectParameter("us_pass", typeof(string));
    
            var us_sexParameter = us_sex != null ?
                new ObjectParameter("us_sex", us_sex) :
                new ObjectParameter("us_sex", typeof(string));
    
            var us_isStdParameter = us_isStd.HasValue ?
                new ObjectParameter("us_isStd", us_isStd) :
                new ObjectParameter("us_isStd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateUser_Result>("UpdateUser", us_idParameter, us_nameParameter, us_mailParameter, us_passParameter, us_sexParameter, us_isStdParameter);
        }
    }
}
